# Headless service to provide DNS lookup
apiVersion: v1
kind: Service
metadata:
  labels:
    app: scylla
  name: scylla
spec:
  clusterIP: None
  ports:
    - port: 9042
      name: cql
  selector:
    app: scylla-data
----
# new API name
apiVersion: "apps/v1alpha1"
kind: PetSet
metadata:
  name: scylla
spec:
  serviceName: scylla
  # replicas are the same as used by Replication Controllers
  # except pets are deployed in order 0, 1, 2, 3, etc
  replicas: 3
  template:
    metadata:
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
      labels:
        app: scylla-data
    spec:
      # just as other component in Kubernetes one
      # or more containers are deployed
      containers:
      - name: scylla
        image: jooyeong/scylla
        imagePullPolicy: Always
#        command:
#          - /run.sh
        ports:
        - containerPort: 7000
          name: intra-node
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
#        securityContext:
#          privileged: true
        env:
#          - name: MAX_HEAP_SIZE
#            value: 512M
#          - name: HEAP_NEWSIZE
#            value: 100M
          # this is relying on guaranteed network identity of Pet Sets, we
          # will know the name of the Pets / Pod before they are created
#          - name: SCYLLA_SEEDS
#            value: "scylla-0.scylla.default.svc.cluster.local,scylla-1.scylla.default.svc.cluster.local"
#          - name: SCYLLA_CLUSTER_NAME
#            value: "JooTest"
          # this variable is used by the read-probe looking
          # for the IP Address in a `nodetool status` command
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the pet volumes.
        volumeMounts:
        - name: scylla-data
          mountPath: /scylla-data
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.  Storage can be automatically
  # created for the Pets depending on the cloud environment.
  volumeClaimTemplates:
  - metadata:
      name: scylla-data
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi

